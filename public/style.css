*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
 
/*  DISPLAY: FLEX (ON THE PARENT)

    - flex-direction
        - row: standalone
        - column: like not using flex at all. (But it allows you to use flex features)
    - justify-content
        - flex-start: standalone
        - center
        - flex-end
        - space-between: without MARGINs
        - space-around: with MARGINs
        - space-evenly: with MARGINs that are equal to the space in between the items.
    - align-items: Same as justify-content but using the "cross axis" as reference.
        - flex-start: standalone
        - center
        - flex-end
        - stretch: it stretches the items, unless their width/height is defined.
        - baseline: the items are moved so that the text they contain is aligned.
    - flex-wrap
        - nowrap: standalone
        - wrap: the items that don't fit will jump to the next line
    - align-content: used with flex-wrap, removing the spaces in between the lines. 
    (It works as justify-content)
    - flex-flow: direction + wrapping
        (e.g. |-> "flex-flow: column wrap;" )


    (ON THE CHILD)

    - order: each child would have an order assigned and the parent will list them accordingly.
    - flex-grow: freaking confusing. (1 = takes the available space)
    - flex-shrink: freaking confusing. (1 = standalone)
    - flex-basis: freaking confusing. (it's like saying width. If used with a wrap parent, 
    it won't let it go below that width)
    - flex: extremely confusing as it combines the 3 above.
    - align-self: like align-items, but for each child.

*/


.parent1{
    height: 100vh;
    border: 20px solid black;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
}

.parent2{
    height: 100vh;
    border: 20px solid black;

    display: flex;
    justify-content: space-between;
}

.parent3{
    height: 100vh;
    border: 20px solid black;

    display: flex;
    justify-content: space-around;
}

.parent4{
    height: 100vh;
    border: 20px solid black;

    display: flex;
    justify-content: space-evenly;
}

.parent5{
    height: 100vh;
    border: 20px solid black;

    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

.parent6{
    height: 100vh;
    border: 20px solid black;

    display: flex;
    flex-wrap: wrap;
    align-content: space-around;
}

.parent7{
    height: 100vh;
    border: 20px solid black;

    display: flex;
    flex-flow: column wrap;
    align-content: space-around;
}

.parent8{
    height: 100vh;
    border: 20px solid black;

    display: flex;
}


/* This one doesn't work... 
it's implemented but the childs don't behave the way they should */
.parent9{
    height: 100vh;
    border: 20px solid black;

    display: flex;
}




.child1{
    width: 200px;
    height: 200px;
    background: green;
}
.child2{
    width: 200px;
    height: 200px;
    background: darkcyan;
}
.child3{
    width: 200px;
    height: 200px;
    background: burlywood;
}
.child4{
    width: 200px;
    height: 200px;
    background: darkslateblue;
}





.child1-8{
    width: 200px;
    height: 200px;
    background: green;
    flex-grow: 1;
}
.child2-8{
    width: 200px;
    height: 200px;
    background: darkcyan;
}


/*
    These ones don't work... 
    I guess I should have implemented 'em somewhere else
*/

.child1-9{
    height: 200px;
    background: green;

    flex: 1 1 300px;
}
.child2-9{
    height: 200px;
    background: darkcyan;

    flex: 1 1 300px;
}
.child3-9{
    height: 200px;
    background: burlywood;

    flex: 1 1 300px;
}